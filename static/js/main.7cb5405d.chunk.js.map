{"version":3,"sources":["components/EmployeeList/index.js","utils/Apiservice.js","components/Navbar/index.js","components/EmployeeSearch/validate.js","components/MyModal.js","components/EmployeeSearch/index.js","App.js","index.js"],"names":["EmployeeList","props","className","onClick","handleSort","employees","map","employee","key","id","src","avatar","alt","firstName","lastName","email","gender","department","date","yearsWorked","fetch","then","res","json","styles","navbarStyle","backgroundColor","color","searchBtn","Navbar","style","type","placeholder","onChange","handleInputChange","value","name","handleFormSubmit","handleFormClear","validate","input","length","test","MyModal","useState","isOpen","setIsOpen","hideModal","useEffect","showModal","Modal","show","onHide","Header","Title","Body","Footer","EmployeeSearch","state","search","searchEmployees","query","letters","toLowerCase","searchedEmployees","filter","includes","setState","API","startDate","moment","nowDate","diff","newEmployees","catch","err","console","log","event","target","preventDefault","category","sortedEmployees","sort","a","b","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cb5405d.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\"\r\n\r\nfunction EmployeeList(props) {\r\n    return (\r\n        <div className=\"table-responsive-sm\">\r\n            <table className=\"table table-bordered table-dark table-striped table-hover text-center\">\r\n                <thead className=\"tHeading\">\r\n                    <tr>\r\n                    <th>Id</th>\r\n                    <th></th>\r\n                    <th className= \"sortHeading\" onClick={() => props.handleSort(\"firstName\")}>First Name<i className=\"ml-1 fa fa-sort-up\"></i></th>\r\n                    <th className= \"sortHeading\" onClick={() => props.handleSort(\"lastName\")}>Last Name<i className=\"ml-1 fa fa-sort-up\"></i></th>\r\n                    <th>Email</th>\r\n                    <th>Gender</th>\r\n                    <th className= \"sortHeading\" onClick={() => props.handleSort(\"department\")}>Department<i className=\"ml-1 fa fa-sort-up\"></i></th>\r\n                    <th>Start Date</th>\r\n                    <th className= \"sortHeading\" onClick={() => props.handleSort(\"years\")}>Years Worked<i className=\"ml-1 fa fa-sort-up\"></i></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.employees.map(employee => (\r\n                        <tr key={employee.id}>\r\n                         <td>{employee.id}</td>\r\n                         <td><img src={employee.avatar} alt={employee.firstName} /></td>\r\n                         <td>{employee.firstName}</td>\r\n                         <td>{employee.lastName}</td>\r\n                         <td>{employee.email}</td>\r\n                         <td>{employee.gender}</td>\r\n                         <td>{employee.department}</td>\r\n                         <td>{employee.date}</td>\r\n                         <td>{employee.yearsWorked}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeList;","//Returning the list of employees\r\nexport default {\r\n    getEmployees: function() {\r\n        return fetch('https://alper.dev/employees')\r\n        .then((res) => res.json());\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n    navbarStyle: {\r\n      backgroundColor: \"sandybrown\",\r\n      color: \"white\"\r\n    },\r\n    searchBtn: {\r\n        backgroundColor: \"brown\",\r\n        color: \"white\"\r\n    }\r\n};\r\n\r\nfunction Navbar(props) {\r\n    return(\r\n        <nav style= {styles.navbarStyle} className=\"navbar\">\r\n            <h1>Employee List</h1>\r\n            <form className=\"form-inline\">\r\n                <input \r\n                className=\"form-control mr-sm-2\" \r\n                type=\"search\" \r\n                placeholder=\"Search\" \r\n                id=\"search\"\r\n                onChange={props.handleInputChange}\r\n                value={props.value}\r\n                name=\"search\"\r\n                />\r\n                <button style= {styles.searchBtn} onClick={props.handleFormSubmit} className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">\r\n                    <i className=\"fa fa-search\"></i>\r\n                </button>\r\n                <button style= {styles.searchBtn} onClick={props.handleFormClear} className=\"btn btn-outline-secondary m-2 my-sm-0\">\r\n                    <i className=\"fa fa-undo\"></i>\r\n                </button>\r\n            </form>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default function validate(input) {\r\n    if(input.length > 10)\r\n        return 0;\r\n    else if(!/^[a-zA-Z]*$/g.test(input))\r\n        return 0;\r\n    else \r\n        return 1;\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function MyModal(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    //hide modal when user presses OK\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n        props.hideModal();\r\n      };\r\n    // When this component mounts, set isOpen variable accordingly\r\n    useEffect(()=> {\r\n        if(props.showModal)\r\n            setIsOpen(true);\r\n        else \r\n            setIsOpen(false);        \r\n    },[props.showModal]);\r\n    //Render Modal\r\n    return(\r\n        <Modal show={isOpen} onHide={hideModal}>\r\n            <Modal.Header>\r\n            <Modal.Title>Hi</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Please enter valid characters!</Modal.Body>\r\n            <Modal.Footer>\r\n            <button onClick={hideModal}>Ok</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport EmployeeList from \"../EmployeeList\"\r\nimport API from \"../../utils/Apiservice\";\r\nimport Navbar from '../Navbar';\r\nimport validate from './validate';\r\nimport MyModal from '../MyModal';\r\n \r\nclass EmployeeSearch extends Component {\r\n    //Initializing state\r\n    state = {\r\n        search: \"\",\r\n        showModal: false,\r\n        employees: []\r\n    };\r\n    // When this component mounts, search employees\r\n    componentDidMount() {\r\n        this.searchEmployees();\r\n    }\r\n    //Search employees\r\n    searchEmployees = (query) => {\r\n        if(query){\r\n            const valid = validate(query); //Validating the input\r\n            if(valid){ \r\n                const letters = query.toLowerCase();\r\n                // Filter this.state.employees for employees whose firstname or last name includes searched letters.\r\n                const searchedEmployees = this.state.employees.filter(\r\n                    employee => (employee.firstName.toLowerCase().includes(letters)) || (employee.lastName.toLowerCase().includes(letters))\r\n                    );\r\n                // Set this.state.employees equal to the new employees array\r\n                this.setState({ employees: searchedEmployees });\r\n                return;\r\n            } else {\r\n              this.setState({ showModal: true })\r\n            }\r\n        }else {\r\n            API.getEmployees()\r\n            .then(res => {\r\n                // return new employee array with day's worked col  \r\n                const newEmployees = res.map(employee => {\r\n                    const startDate = moment(employee.date, 'M/D/YYYY')\r\n                    const nowDate = moment()\r\n                    employee.yearsWorked = nowDate.diff(startDate, 'years')\r\n                    return employee     \r\n                    })\r\n                return newEmployees;\r\n             })\r\n            .then(newEmployees => {\r\n                this.setState({ employees: newEmployees })})\r\n            .catch(err => console.log(err));\r\n        }\r\n    }; \r\n    hideModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n    //Changing state whenever search field changes\r\n    handleInputChange = (event) => {\r\n        const {name,value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n     }\r\n    //Search for the employees with specific letters\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        //search for the employees matching the search query\r\n        this.searchEmployees(this.state.search);\r\n        this.setState({ search: \"\" });\r\n    }\r\n    //Clear the search field and rerender all employees\r\n    handleFormClear = (event) => {\r\n        if(event)\r\n            event.preventDefault();\r\n        //clear search field and search all employees again\r\n        this.setState({ search: \"\" }, () => {\r\n           this.searchEmployees(this.state.search);\r\n        });\r\n    }\r\n    //Sorting employees by their first name, lastname, years or department\r\n    handleSort = (category) => {\r\n         if(category === \"years\") { \r\n            // Sort this.state.employees by years\r\n            const sortedEmployees = this.state.employees.sort((a,b) => {\r\n                    return a.yearsWorked - b.yearsWorked;\r\n                })\r\n            // Set this.state.employees equal to the new employees array\r\n            this.setState({ employees: sortedEmployees });\r\n        } else {\r\n           // Sort this.state.employees by first name, last name or department\r\n            const sortedEmployees = this.state.employees.sort(\r\n                (a,b) => {\r\n                    if(a[category].toLowerCase() < (b[category].toLowerCase())) return -1;\r\n                    if(a[category].toLowerCase() > (b[category].toLowerCase())) return 1;\r\n                    return 0;\r\n                })\r\n            // Set this.state.employees equal to the new employees array\r\n            this.setState({ employees: sortedEmployees });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar \r\n                    value={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                    handleFormClear = {this.handleFormClear}\r\n                />\r\n                <EmployeeList \r\n                    employees = {this.state.employees}\r\n                    handleSort={this.handleSort}\r\n                />\r\n                <MyModal \r\n                showModal = {this.state.showModal} \r\n                hideModal = {this.hideModal}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeSearch;","import React from 'react';\nimport EmployeeSearch from './components/EmployeeSearch';\n\nfunction App() {\n  return (\n    <EmployeeSearch />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}